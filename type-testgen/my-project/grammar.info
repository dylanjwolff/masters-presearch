-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from grammar.y
-----------------------------------------------------------------------------

state 5 contains 2 shift/reduce conflicts.
state 26 contains 5 shift/reduce conflicts.
state 35 contains 1 shift/reduce conflicts.
state 42 contains 1 shift/reduce conflicts.
state 43 contains 1 shift/reduce conflicts.
state 44 contains 5 shift/reduce conflicts.
state 45 contains 5 shift/reduce conflicts.
state 46 contains 2 shift/reduce conflicts.
state 48 contains 5 shift/reduce conflicts.
state 50 contains 1 shift/reduce conflicts.
state 51 contains 2 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Decls                             (0)
	Decls -> Decl                                      (1)
	Decls -> Decls Decl                                (2)
	Decl -> FDecls                                     (3)
	Decl -> CDecl                                      (4)
	Decl -> data_decl TypeExp '=' TypeExp              (5)
	Decl -> type_decl TypeExp '=' TypeExp              (6)
	Decl -> '{-#' TypeExp '#-}'                        (7)
	CDecl -> class_decl TypeExp where FDecls           (8)
	CDecl -> class_decl TypeExp '=>' TypeExp where FDecls   (9)
	FDecl -> fname '::' TypeExp                        (10)
	FDecl -> fname '::' TypeExp '=>' TypeExp           (11)
	FDecl -> '(' FDecl ')'                             (12)
	FDecls -> FDecl                                    (13)
	FDecls -> FDecls FDecl                             (14)
	TypeExp -> name                                    (15)
	TypeExp -> type                                    (16)
	TypeExp -> '*'                                     (17)
	TypeExp -> TypeExp '|' TypeExp                     (18)
	TypeExp -> TypeExp ',' TypeExp                     (19)
	TypeExp -> TypeExp '->' TypeExp                    (20)
	TypeExp -> '[' TypeExp ']'                         (21)
	TypeExp -> '(' TypeExp ')'                         (22)
	TypeExp -> TypeExp TypeExp                         (23)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'::'           { TokenColons }
	'->'           { TokenArrow }
	'=>'           { TokenBigArrow }
	type           { TokenType $$ }
	class_decl     { TokenClassMeta }
	type_decl      { TokenTypeMeta }
	data_decl      { TokenDataMeta }
	'='            { TokenEquals }
	where          { TokenWhere }
	'|'            { TokenOr }
	'['            { TokenOSB }
	']'            { TokenCSB }
	'('            { TokenOB }
	')'            { TokenCB }
	'*'            { TokenAny }
	name           { TokenName $$ }
	fname          { TokenFName $$ }
	','            { TokenComma }
	'{-#'          { TokenODir }
	'#-}'          { TokenCDir }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Decls           rules 1, 2
	Decl            rules 3, 4, 5, 6, 7
	CDecl           rules 8, 9
	FDecl           rules 10, 11, 12
	FDecls          rules 13, 14
	TypeExp         rules 15, 16, 17, 18, 19, 20, 21, 22, 23

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	class_decl     shift, and enter state 6
	type_decl      shift, and enter state 7
	data_decl      shift, and enter state 8
	'('            shift, and enter state 9
	fname          shift, and enter state 10
	'{-#'          shift, and enter state 11

	Decls          goto state 12
	Decl           goto state 2
	CDecl          goto state 3
	FDecl          goto state 4
	FDecls         goto state 5

State 1


	class_decl     shift, and enter state 6
	type_decl      shift, and enter state 7
	data_decl      shift, and enter state 8
	'('            shift, and enter state 9
	fname          shift, and enter state 10
	'{-#'          shift, and enter state 11

	Decl           goto state 2
	CDecl          goto state 3
	FDecl          goto state 4
	FDecls         goto state 5

State 2

	Decls -> Decl .                                     (rule 1)

	class_decl     reduce using rule 1
	type_decl      reduce using rule 1
	data_decl      reduce using rule 1
	'('            reduce using rule 1
	fname          reduce using rule 1
	'{-#'          reduce using rule 1
	%eof           reduce using rule 1


State 3

	Decl -> CDecl .                                     (rule 4)

	class_decl     reduce using rule 4
	type_decl      reduce using rule 4
	data_decl      reduce using rule 4
	'('            reduce using rule 4
	fname          reduce using rule 4
	'{-#'          reduce using rule 4
	%eof           reduce using rule 4


State 4

	FDecls -> FDecl .                                   (rule 13)

	class_decl     reduce using rule 13
	type_decl      reduce using rule 13
	data_decl      reduce using rule 13
	'('            reduce using rule 13
	fname          reduce using rule 13
	'{-#'          reduce using rule 13
	%eof           reduce using rule 13


State 5

	Decl -> FDecls .                                    (rule 3)
	FDecls -> FDecls . FDecl                            (rule 14)

	class_decl     reduce using rule 3
	type_decl      reduce using rule 3
	data_decl      reduce using rule 3
	'('            shift, and enter state 9
			(reduce using rule 3)

	fname          shift, and enter state 10
			(reduce using rule 3)

	'{-#'          reduce using rule 3
	%eof           reduce using rule 3

	FDecl          goto state 25

State 6

	CDecl -> class_decl . TypeExp where FDecls          (rule 8)
	CDecl -> class_decl . TypeExp '=>' TypeExp where FDecls    (rule 9)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 24

State 7

	Decl -> type_decl . TypeExp '=' TypeExp             (rule 6)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 23

State 8

	Decl -> data_decl . TypeExp '=' TypeExp             (rule 5)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 22

State 9

	FDecl -> '(' . FDecl ')'                            (rule 12)

	'('            shift, and enter state 9
	fname          shift, and enter state 10

	FDecl          goto state 21

State 10

	FDecl -> fname . '::' TypeExp                       (rule 10)
	FDecl -> fname . '::' TypeExp '=>' TypeExp          (rule 11)

	'::'           shift, and enter state 20


State 11

	Decl -> '{-#' . TypeExp '#-}'                       (rule 7)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 14

State 12

	%start_parser -> Decls .                            (rule 0)
	Decls -> Decls . Decl                               (rule 2)

	class_decl     shift, and enter state 6
	type_decl      shift, and enter state 7
	data_decl      shift, and enter state 8
	'('            shift, and enter state 9
	fname          shift, and enter state 10
	'{-#'          shift, and enter state 11
	%eof           accept

	Decl           goto state 13
	CDecl          goto state 3
	FDecl          goto state 4
	FDecls         goto state 5

State 13

	Decls -> Decls Decl .                               (rule 2)

	class_decl     reduce using rule 2
	type_decl      reduce using rule 2
	data_decl      reduce using rule 2
	'('            reduce using rule 2
	fname          reduce using rule 2
	'{-#'          reduce using rule 2
	%eof           reduce using rule 2


State 14

	Decl -> '{-#' TypeExp . '#-}'                       (rule 7)
	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	type           shift, and enter state 15
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19
	','            shift, and enter state 31
	'#-}'          shift, and enter state 38

	TypeExp        goto state 26

State 15

	TypeExp -> type .                                   (rule 16)

	'->'           reduce using rule 16
	'=>'           reduce using rule 16
	type           reduce using rule 16
	class_decl     reduce using rule 16
	type_decl      reduce using rule 16
	data_decl      reduce using rule 16
	'='            reduce using rule 16
	where          reduce using rule 16
	'|'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'*'            reduce using rule 16
	name           reduce using rule 16
	fname          reduce using rule 16
	','            reduce using rule 16
	'{-#'          reduce using rule 16
	'#-}'          reduce using rule 16
	%eof           reduce using rule 16


State 16

	TypeExp -> '[' . TypeExp ']'                        (rule 21)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 37

State 17

	TypeExp -> '(' . TypeExp ')'                        (rule 22)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 36

State 18

	TypeExp -> '*' .                                    (rule 17)

	'->'           reduce using rule 17
	'=>'           reduce using rule 17
	type           reduce using rule 17
	class_decl     reduce using rule 17
	type_decl      reduce using rule 17
	data_decl      reduce using rule 17
	'='            reduce using rule 17
	where          reduce using rule 17
	'|'            reduce using rule 17
	'['            reduce using rule 17
	']'            reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'*'            reduce using rule 17
	name           reduce using rule 17
	fname          reduce using rule 17
	','            reduce using rule 17
	'{-#'          reduce using rule 17
	'#-}'          reduce using rule 17
	%eof           reduce using rule 17


State 19

	TypeExp -> name .                                   (rule 15)

	'->'           reduce using rule 15
	'=>'           reduce using rule 15
	type           reduce using rule 15
	class_decl     reduce using rule 15
	type_decl      reduce using rule 15
	data_decl      reduce using rule 15
	'='            reduce using rule 15
	where          reduce using rule 15
	'|'            reduce using rule 15
	'['            reduce using rule 15
	']'            reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	'*'            reduce using rule 15
	name           reduce using rule 15
	fname          reduce using rule 15
	','            reduce using rule 15
	'{-#'          reduce using rule 15
	'#-}'          reduce using rule 15
	%eof           reduce using rule 15


State 20

	FDecl -> fname '::' . TypeExp                       (rule 10)
	FDecl -> fname '::' . TypeExp '=>' TypeExp          (rule 11)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 35

State 21

	FDecl -> '(' FDecl . ')'                            (rule 12)

	')'            shift, and enter state 34


State 22

	Decl -> data_decl TypeExp . '=' TypeExp             (rule 5)
	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	type           shift, and enter state 15
	'='            shift, and enter state 33
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19
	','            shift, and enter state 31

	TypeExp        goto state 26

State 23

	Decl -> type_decl TypeExp . '=' TypeExp             (rule 6)
	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	type           shift, and enter state 15
	'='            shift, and enter state 32
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19
	','            shift, and enter state 31

	TypeExp        goto state 26

State 24

	CDecl -> class_decl TypeExp . where FDecls          (rule 8)
	CDecl -> class_decl TypeExp . '=>' TypeExp where FDecls    (rule 9)
	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	'=>'           shift, and enter state 28
	type           shift, and enter state 15
	where          shift, and enter state 29
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19
	','            shift, and enter state 31

	TypeExp        goto state 26

State 25

	FDecls -> FDecls FDecl .                            (rule 14)

	class_decl     reduce using rule 14
	type_decl      reduce using rule 14
	data_decl      reduce using rule 14
	'('            reduce using rule 14
	fname          reduce using rule 14
	'{-#'          reduce using rule 14
	%eof           reduce using rule 14


State 26

	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)
	TypeExp -> TypeExp TypeExp .                        (rule 23)

	'->'           reduce using rule 23
	'=>'           reduce using rule 23
	type           shift, and enter state 15
			(reduce using rule 23)

	class_decl     reduce using rule 23
	type_decl      reduce using rule 23
	data_decl      reduce using rule 23
	'='            reduce using rule 23
	where          reduce using rule 23
	'|'            reduce using rule 23
	'['            shift, and enter state 16
			(reduce using rule 23)

	']'            reduce using rule 23
	'('            shift, and enter state 17
			(reduce using rule 23)

	')'            reduce using rule 23
	'*'            shift, and enter state 18
			(reduce using rule 23)

	name           shift, and enter state 19
			(reduce using rule 23)

	fname          reduce using rule 23
	','            reduce using rule 23
	'{-#'          reduce using rule 23
	'#-}'          reduce using rule 23
	%eof           reduce using rule 23

	TypeExp        goto state 26

State 27

	TypeExp -> TypeExp '->' . TypeExp                   (rule 20)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 48

State 28

	CDecl -> class_decl TypeExp '=>' . TypeExp where FDecls    (rule 9)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 47

State 29

	CDecl -> class_decl TypeExp where . FDecls          (rule 8)

	'('            shift, and enter state 9
	fname          shift, and enter state 10

	FDecl          goto state 4
	FDecls         goto state 46

State 30

	TypeExp -> TypeExp '|' . TypeExp                    (rule 18)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 45

State 31

	TypeExp -> TypeExp ',' . TypeExp                    (rule 19)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 44

State 32

	Decl -> type_decl TypeExp '=' . TypeExp             (rule 6)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 43

State 33

	Decl -> data_decl TypeExp '=' . TypeExp             (rule 5)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 42

State 34

	FDecl -> '(' FDecl ')' .                            (rule 12)

	class_decl     reduce using rule 12
	type_decl      reduce using rule 12
	data_decl      reduce using rule 12
	'('            reduce using rule 12
	')'            reduce using rule 12
	fname          reduce using rule 12
	'{-#'          reduce using rule 12
	%eof           reduce using rule 12


State 35

	FDecl -> fname '::' TypeExp .                       (rule 10)
	FDecl -> fname '::' TypeExp . '=>' TypeExp          (rule 11)
	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	'=>'           shift, and enter state 41
	type           shift, and enter state 15
	class_decl     reduce using rule 10
	type_decl      reduce using rule 10
	data_decl      reduce using rule 10
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	'('            shift, and enter state 17
			(reduce using rule 10)

	')'            reduce using rule 10
	'*'            shift, and enter state 18
	name           shift, and enter state 19
	fname          reduce using rule 10
	','            shift, and enter state 31
	'{-#'          reduce using rule 10
	%eof           reduce using rule 10

	TypeExp        goto state 26

State 36

	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> '(' TypeExp . ')'                        (rule 22)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	type           shift, and enter state 15
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	')'            shift, and enter state 40
	'*'            shift, and enter state 18
	name           shift, and enter state 19
	','            shift, and enter state 31

	TypeExp        goto state 26

State 37

	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> '[' TypeExp . ']'                        (rule 21)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	type           shift, and enter state 15
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	']'            shift, and enter state 39
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19
	','            shift, and enter state 31

	TypeExp        goto state 26

State 38

	Decl -> '{-#' TypeExp '#-}' .                       (rule 7)

	class_decl     reduce using rule 7
	type_decl      reduce using rule 7
	data_decl      reduce using rule 7
	'('            reduce using rule 7
	fname          reduce using rule 7
	'{-#'          reduce using rule 7
	%eof           reduce using rule 7


State 39

	TypeExp -> '[' TypeExp ']' .                        (rule 21)

	'->'           reduce using rule 21
	'=>'           reduce using rule 21
	type           reduce using rule 21
	class_decl     reduce using rule 21
	type_decl      reduce using rule 21
	data_decl      reduce using rule 21
	'='            reduce using rule 21
	where          reduce using rule 21
	'|'            reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	name           reduce using rule 21
	fname          reduce using rule 21
	','            reduce using rule 21
	'{-#'          reduce using rule 21
	'#-}'          reduce using rule 21
	%eof           reduce using rule 21


State 40

	TypeExp -> '(' TypeExp ')' .                        (rule 22)

	'->'           reduce using rule 22
	'=>'           reduce using rule 22
	type           reduce using rule 22
	class_decl     reduce using rule 22
	type_decl      reduce using rule 22
	data_decl      reduce using rule 22
	'='            reduce using rule 22
	where          reduce using rule 22
	'|'            reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	name           reduce using rule 22
	fname          reduce using rule 22
	','            reduce using rule 22
	'{-#'          reduce using rule 22
	'#-}'          reduce using rule 22
	%eof           reduce using rule 22


State 41

	FDecl -> fname '::' TypeExp '=>' . TypeExp          (rule 11)

	type           shift, and enter state 15
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19

	TypeExp        goto state 50

State 42

	Decl -> data_decl TypeExp '=' TypeExp .             (rule 5)
	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	type           shift, and enter state 15
	class_decl     reduce using rule 5
	type_decl      reduce using rule 5
	data_decl      reduce using rule 5
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	'('            shift, and enter state 17
			(reduce using rule 5)

	'*'            shift, and enter state 18
	name           shift, and enter state 19
	fname          reduce using rule 5
	','            shift, and enter state 31
	'{-#'          reduce using rule 5
	%eof           reduce using rule 5

	TypeExp        goto state 26

State 43

	Decl -> type_decl TypeExp '=' TypeExp .             (rule 6)
	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	type           shift, and enter state 15
	class_decl     reduce using rule 6
	type_decl      reduce using rule 6
	data_decl      reduce using rule 6
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	'('            shift, and enter state 17
			(reduce using rule 6)

	'*'            shift, and enter state 18
	name           shift, and enter state 19
	fname          reduce using rule 6
	','            shift, and enter state 31
	'{-#'          reduce using rule 6
	%eof           reduce using rule 6

	TypeExp        goto state 26

State 44

	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp ',' TypeExp .                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           reduce using rule 19
	'=>'           reduce using rule 19
	type           shift, and enter state 15
			(reduce using rule 19)

	class_decl     reduce using rule 19
	type_decl      reduce using rule 19
	data_decl      reduce using rule 19
	'='            reduce using rule 19
	where          reduce using rule 19
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
			(reduce using rule 19)

	']'            reduce using rule 19
	'('            shift, and enter state 17
			(reduce using rule 19)

	')'            reduce using rule 19
	'*'            shift, and enter state 18
			(reduce using rule 19)

	name           shift, and enter state 19
			(reduce using rule 19)

	fname          reduce using rule 19
	','            reduce using rule 19
	'{-#'          reduce using rule 19
	'#-}'          reduce using rule 19
	%eof           reduce using rule 19

	TypeExp        goto state 26

State 45

	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp '|' TypeExp .                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           reduce using rule 18
	'=>'           reduce using rule 18
	type           shift, and enter state 15
			(reduce using rule 18)

	class_decl     reduce using rule 18
	type_decl      reduce using rule 18
	data_decl      reduce using rule 18
	'='            reduce using rule 18
	where          reduce using rule 18
	'|'            reduce using rule 18
	'['            shift, and enter state 16
			(reduce using rule 18)

	']'            reduce using rule 18
	'('            shift, and enter state 17
			(reduce using rule 18)

	')'            reduce using rule 18
	'*'            shift, and enter state 18
			(reduce using rule 18)

	name           shift, and enter state 19
			(reduce using rule 18)

	fname          reduce using rule 18
	','            reduce using rule 18
	'{-#'          reduce using rule 18
	'#-}'          reduce using rule 18
	%eof           reduce using rule 18

	TypeExp        goto state 26

State 46

	CDecl -> class_decl TypeExp where FDecls .          (rule 8)
	FDecls -> FDecls . FDecl                            (rule 14)

	class_decl     reduce using rule 8
	type_decl      reduce using rule 8
	data_decl      reduce using rule 8
	'('            shift, and enter state 9
			(reduce using rule 8)

	fname          shift, and enter state 10
			(reduce using rule 8)

	'{-#'          reduce using rule 8
	%eof           reduce using rule 8

	FDecl          goto state 25

State 47

	CDecl -> class_decl TypeExp '=>' TypeExp . where FDecls    (rule 9)
	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	type           shift, and enter state 15
	where          shift, and enter state 49
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	'('            shift, and enter state 17
	'*'            shift, and enter state 18
	name           shift, and enter state 19
	','            shift, and enter state 31

	TypeExp        goto state 26

State 48

	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp '->' TypeExp .                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           reduce using rule 20
	'=>'           reduce using rule 20
	type           shift, and enter state 15
			(reduce using rule 20)

	class_decl     reduce using rule 20
	type_decl      reduce using rule 20
	data_decl      reduce using rule 20
	'='            reduce using rule 20
	where          reduce using rule 20
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
			(reduce using rule 20)

	']'            reduce using rule 20
	'('            shift, and enter state 17
			(reduce using rule 20)

	')'            reduce using rule 20
	'*'            shift, and enter state 18
			(reduce using rule 20)

	name           shift, and enter state 19
			(reduce using rule 20)

	fname          reduce using rule 20
	','            shift, and enter state 31
	'{-#'          reduce using rule 20
	'#-}'          reduce using rule 20
	%eof           reduce using rule 20

	TypeExp        goto state 26

State 49

	CDecl -> class_decl TypeExp '=>' TypeExp where . FDecls    (rule 9)

	'('            shift, and enter state 9
	fname          shift, and enter state 10

	FDecl          goto state 4
	FDecls         goto state 51

State 50

	FDecl -> fname '::' TypeExp '=>' TypeExp .          (rule 11)
	TypeExp -> TypeExp . '|' TypeExp                    (rule 18)
	TypeExp -> TypeExp . ',' TypeExp                    (rule 19)
	TypeExp -> TypeExp . '->' TypeExp                   (rule 20)
	TypeExp -> TypeExp . TypeExp                        (rule 23)

	'->'           shift, and enter state 27
	type           shift, and enter state 15
	class_decl     reduce using rule 11
	type_decl      reduce using rule 11
	data_decl      reduce using rule 11
	'|'            shift, and enter state 30
	'['            shift, and enter state 16
	'('            shift, and enter state 17
			(reduce using rule 11)

	')'            reduce using rule 11
	'*'            shift, and enter state 18
	name           shift, and enter state 19
	fname          reduce using rule 11
	','            shift, and enter state 31
	'{-#'          reduce using rule 11
	%eof           reduce using rule 11

	TypeExp        goto state 26

State 51

	CDecl -> class_decl TypeExp '=>' TypeExp where FDecls .    (rule 9)
	FDecls -> FDecls . FDecl                            (rule 14)

	class_decl     reduce using rule 9
	type_decl      reduce using rule 9
	data_decl      reduce using rule 9
	'('            shift, and enter state 9
			(reduce using rule 9)

	fname          shift, and enter state 10
			(reduce using rule 9)

	'{-#'          reduce using rule 9
	%eof           reduce using rule 9

	FDecl          goto state 25

-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 24
Number of terminals: 20
Number of non-terminals: 7
Number of states: 52
